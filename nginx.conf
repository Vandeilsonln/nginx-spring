events {
    worker_connections 1024;
}

http {

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;  #user1:123
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;


    log_format custom_log '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" '
                              '$upstream_addr';

    access_log /var/log/nginx/access.log custom_log;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream spring_backend {
        server my-app1:8080;
        server my-app2:8080;
    }

    server {
        listen 9999;

        location /xablau/teste {
            limit_req zone=mylimit burst=1 delay=3;
            limit_req_status 429;
            proxy_pass http://spring_backend;
            #proxy_cache my_cache;
            #proxy_cache_valid 200 1h;
            #proxy_cache_key $scheme$request_uri;
        }

        location /xablau/mais-teste {
            proxy_pass http://spring_backend;
            proxy_cache my_cache;                     # Enable caching
            proxy_cache_valid 200 1h;                 # Cache valid responses for 1 hour
            proxy_cache_key $scheme$request_uri;      # Cache key based on request URI
        }
    }
}
